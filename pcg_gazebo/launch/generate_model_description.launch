<launch>
    <arg name="param_file" default="config.yaml" doc="YAML file with input parameters for rendering the SDF file" />
    <arg name="include_dir" default="." doc="Directory for the included Jinja SDF template files"/>
    <arg name="templates_dir" default="." doc="Directory for the root Jinja SDF template files"/>
    <arg name="model_template" default="robot.sdf.jinja" doc="Name of the model template file"/>
    <arg name="robot_description_param" default="/robot_description" doc="Name of the parameters storing the robot description"/>
    <arg name="output_robot_description_topic" default="/robot_description_sdf" doc="Output topic for publishing the SDF file content" />    
    <arg name="output_sdf_filename" default="/tmp/robot.sdf" doc="Name of the output SDF filename"/>
    <arg name="output_urdf_filename" default="/tmp/robot.urdf" doc="Name of the output URDF filename"/>
    <arg name="spawn_sdf_model_srv" default="spawn_sdf_model" doc="Service name to trigger spawning the SDF model"/>

    <node name="$(anon generate_model_description)"
        pkg="pcg_gazebo"
        type="generate_model_description"
        output="screen"
        args="
            --include-dir $(arg include_dir)
            --templates-dir $(arg templates_dir)
            --param-file $(arg param_file)
            --model-template $(arg model_template)
            --sdf-output-param $(arg robot_description_param)_sdf            
            --output-topic $(arg output_robot_description_topic)
            --output-filename $(arg output_sdf_filename)
            --spawn-sdf-model-srv $(arg spawn_sdf_model_srv)
            --sdf" />

    <node name="$(anon sdf2urdf)"
        pkg="pcg_gazebo"
        type="sdf2urdf"
        output="screen"
        args="
            --input-topic $(arg output_robot_description_topic)
            --output-parameter $(arg robot_description_param)
            --output-filename $(arg output_urdf_filename)" />

</launch>